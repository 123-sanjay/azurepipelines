# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 7.2

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'
- script: sudo apt-get install -y php7.2  php7.2-curl php7.2-gmp php7.2-mbstring php7.2-phpdbg php7.2-sqlite3 php7.2-zip php7.2-bcmath php7.2-dba php7.2-imap php7.2-pspell php7.2-sybase php7.2-bz2 php7.2-dev php7.2-interbase php7.2-mysql php7.2-readline php7.2-tidy php7.2-cgi php7.2-enchant php7.2-intl php7.2-odbc php7.2-recode php7.2-xml php7.2-cli php7.2-fpm php7.2-json php7.2-opcache php7.2-snmp php7.2-xmlrpc php7.2-common php7.2-gd php7.2-ldap php7.2-pgsql php7.2-soap php7.2-xsl php7.2-mongo
- script: composer install && composer update
  displayName: 'composer install & update'
- script: php bin/magento setup:di:compile
  displayName: 'to check compilation error'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/- task: CopyPublishBuildArtifacts@1
  inputs:
    CopyRoot: '$(Build.BinariesDirectory)'
    Contents: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(Build.BuildId).zip'
    ArtifactType: 'Container''
      replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: MyBuildOutputs






      
