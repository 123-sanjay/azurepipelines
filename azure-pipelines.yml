trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: 7.2
  COMPOSER_CACHE_DIR: $(Pipeline.Workspace)/.composer

steps:
- script: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Use PHP version $(phpVersion)'
- script: sudo apt-get install -y php7.2  php7.2-curl php7.2-gmp php7.2-mbstring php7.2-phpdbg php7.2-sqlite3 php7.2-zip php7.2-bcmath php7.2-dba php7.2-imap php7.2-pspell php7.2-sybase php7.2-bz2 php7.2-dev php7.2-interbase php7.2-mysql php7.2-readline php7.2-tidy php7.2-cgi php7.2-enchant php7.2-intl php7.2-odbc php7.2-recode php7.2-xml php7.2-cli php7.2-fpm php7.2-json php7.2-opcache php7.2-snmp php7.2-xmlrpc php7.2-common php7.2-gd php7.2-ldap php7.2-pgsql php7.2-soap php7.2-xsl php7.2-mongo
- task: Cache@2
  inputs:
    key: 'composer | "$(Agent.OS)" | composer.lock'
    restoreKeys: |
      composer | "$(Agent.OS)"
      composer
    path: $(COMPOSER_CACHE_DIR)
  displayName: Cache composer
- script: sed -i 's/5f5929ef9f2ec4ca048a2add261d22c92807630f/ce31e720d60451784b9fdb3769e43e149f50d436/g' composer.lock
  displayName: change checksum pr google-add-module  
- script: composer update 
  displayName: 'composer update'
- script: php bin/magento setup:di:compile
  displayName: 'to check compilation error'
- task: ArchiveFiles@1
  displayName: Archive files
  inputs:
    rootFolder: $(System.DefaultWorkingDirectory)
    includeRootFolder: false
    archiveType: zip
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    artifactName: 'testing' 
